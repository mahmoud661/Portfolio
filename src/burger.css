/* Hide the default checkbox */
.burger_div{
    position: absolute;
    right: 15%;
    display: none;
  
}
.burger input {
  position: absolute;
  opacity: 0;
  visibility: hidden;
  cursor: pointer;
  height: 0;
  width: 0;
}

.burger {
  display: block;
  position: relative;
  cursor: pointer;
  font-size: 20px;
  user-select: none;
}

.checkmark {
  position: relative;
  top: 0;
  left: 0;
  height: 2.9em;
  width: 1.9em;
}


.burger_navi{
    
  position: fixed;
  background: rgb(20,20,20);
background: linear-gradient(180deg, rgba(20,20,20,0.7987570028011204) 25%, rgba(20,20,20,0.5998774509803921) 49%, rgba(20,20,20,0.6082808123249299) 81%, rgba(20,20,20,0.46262254901960786) 91%, rgba(20,20,20,0) 100%);
  height: 50%;
  min-width: 100%;
  z-index: -1;
  top: 0;
  left: 0;
          animation: shrink-out_burger 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;

}

@keyframes shrink-in_burger {
  from {
    height: 0;
  }
  to {
    height: 50%;
  }
}
@keyframes shrink-out_burger {
  from {
    height: 50%;
    
  }
  to {
    height: 0;
    display: none;
visibility: hidden;
  }
}
.burger input:checked + .checkmark .burger_navi{
    display: flex;
    justify-content: center;
    align-items: center;
    visibility: visible;
      animation: shrink-in_burger 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;

}
.burger input:checked + .checkmark .navi_buttons{

    
    display: flex;
    visibility: visible;
    flex-direction: column;
    gap:15px;
    text-align: center;
    z-index: 2;

}
.navi_buttons{
  margin-top: 10%;
    display: none;
    visibility: hidden;
}

@media (max-width: 767px) {

.burger_div{
    
    display: block;
}

}

.hamburger {
  cursor: pointer;
}

.hamburger input {
  display: none;
}

.hamburger svg {
  /* The size of the SVG defines the overall size */
  height: 3em;
  /* Define the transition for transforming the SVG */
  transition: transform 600ms cubic-bezier(0.4, 0, 0.2, 1);
}

.line {
  fill: none;
  stroke: white;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-width: 2;
  /* Define the transition for transforming the Stroke */
  transition: stroke-dasharray 600ms cubic-bezier(0.4, 0, 0.2, 1),
              stroke-dashoffset 600ms cubic-bezier(0.4, 0, 0.2, 1);
}

.line-top-bottom {
  stroke-dasharray: 12 63;
}

.hamburger input:checked + svg {
  transform: rotate(-45deg);
}

.hamburger input:checked + svg .line-top-bottom {
  stroke-dasharray: 20 300;
  stroke-dashoffset: -32.42;
}
